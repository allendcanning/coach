AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Athletes to College Portal
Globals:
  Function:
    Runtime: python3.7
    Timeout: 30
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Default: vpc-729d3814
Mappings:
  VPC2Subnet:
    vpc-729d3814:
      Subnets:
        - "subnet-76ade63f"
        - "subnet-8c44d6d7"
        - "subnet-be65cf82"
Resources:
  displayCoachFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: coach_function.lambda_handler
      CodeUri: ./coach/
      Role: arn:aws:iam::530317771161:role/coach-role
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing 
      Subnets: !FindInMap [VPC2Subnet, !Ref "VpcId", Subnets]
      SecurityGroups:
      - !Ref LoadBalancerSecurityGroup
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: LambdaInvokePermission
    Properties:
      TargetType: lambda
      Targets:
      - Id: !GetAtt displayCoachFunction.Arn
  HttpListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
      - TargetGroupArn: !Ref TargetGroup
        Type: forward
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt displayCoachFunction.Arn
      Action: 'lambda:InvokeFunction'
      Principal: elasticloadbalancing.amazonaws.com
